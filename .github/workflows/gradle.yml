name: Java CI

on: [push]

jobs:
  Build-Test-Release:
    runs-on: ubuntu-latest

    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14


      - name: Clone Atom
        run: git clone --depth=1 --branch=master https://github.com/o7-Fire/Atomic-Library ../Atom

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}
      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build mod jar
        run: ./gradlew deploy -Pversion="$GITHUB_SHA" -PgBranch="${GITHUB_REF##*/}" -PgRepoOwner="$GITHUB_ACTOR" -PgRepo="$GITHUB_REPOSITORY" -Pbuilder="Github-CI" -PbuilderID="$GITHUB_RUN_ID"

      - name: Upload built desktop jar file
        uses: actions/upload-artifact@v2
        with:
          name: Mindustry-Desktop
          path: Desktop/build/libs/Ozone-Desktop.jar
      - name: Upload built core jar file
        uses: actions/upload-artifact@v2
        with:
          name: Mindustry-Core
          path: build/libs/Ozone.jar
      - name: Upload built android jar file
        uses: actions/upload-artifact@v2
        with:
          name: Mindustry-Core-Dexed
          path: build/libs/Ozone-Dexed.jar

      - name: Upload Manifest
        uses: actions/upload-artifact@v2
        with:
          name: Ozone-Manifest
          path: src/resources/Manifest.properties

      - name: Ozone Test
        run: java -DozoneTest=true -jar Desktop/build/libs/Ozone-Desktop.jar
        # Remove old release drafts by using the curl request for the available releases with draft flag
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}


      - name: Read manifest
        id: manifest
        uses: juliangruber/read-file-action@v1
        with:
          path: ./src/resources/Manifest.properties

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "Snapshot"
          release_name: "0:0"
          body: "${{ steps.manifest.outputs.content }}\n#[Download-Jitpack](https://jitpack.io/com/github/o7-Fire/Mindustry-Ozone/Desktop/${{ github.sha }}/Desktop-${{ github.sha }}.jar)"
          draft: true

      - name: Upload Desktop
        id: upload-release-desktop
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Desktop/build/libs/Ozone-Desktop.jar
          asset_name: Ozone-Desktop.jar
          asset_content_type: application/zip
      - name: Upload Core
        id: upload-release-core
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/Ozone-Dexed.jar
          asset_name: dexed-Ozone-Core.jar
          asset_content_type: application/zip
      - name: Upload Manifest
        id: upload-release-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./src/resources/Manifest.properties
          asset_name: Manifest.properties
          asset_content_type: application/zip